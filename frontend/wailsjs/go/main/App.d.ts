// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {main} from '../models';
import {time} from '../models';

export function CheckForUpdates():Promise<boolean>;

export function ConfirmAction(arg1:string,arg2:string):Promise<boolean>;

export function DeleteOrganization(arg1:number):Promise<void>;

export function DeleteProject(arg1:number):Promise<void>;

export function ExportByMonth(arg1:main.ExportType,arg2:string,arg3:number,arg4:time.Month):Promise<string>;

export function ExportByYear(arg1:main.ExportType,arg2:string,arg3:number):Promise<string>;

export function GetActiveTimer():Promise<main.ActiveTimer>;

export function GetDailyWorkTimeByMonth(arg1:number,arg2:time.Month,arg3:number):Promise<{[key: string]: {[key: string]: number}}>;

export function GetMonthlyWorkTime(arg1:number,arg2:number):Promise<{[key: number]: {[key: string]: number}}>;

export function GetOrgWorkTimeByMonth(arg1:number,arg2:time.Month,arg3:number):Promise<number>;

export function GetOrgWorkTimeByWeek(arg1:number,arg2:time.Month,arg3:number,arg4:number):Promise<number>;

export function GetOrganizations():Promise<Array<main.Organization>>;

export function GetProjWorkTimeByMonth(arg1:number,arg2:time.Month,arg3:number):Promise<number>;

export function GetProjWorkTimeByWeek(arg1:number,arg2:time.Month,arg3:number,arg4:number):Promise<number>;

export function GetProjects(arg1:number):Promise<Array<main.Project>>;

export function GetVersion():Promise<string>;

export function GetWeekOfMonth(arg1:number,arg2:time.Month,arg3:number):Promise<number>;

export function GetWeeklyWorkTime(arg1:number,arg2:time.Month,arg3:number):Promise<{[key: number]: {[key: string]: number}}>;

export function GetWorkTime(arg1:string,arg2:number):Promise<number>;

export function GetWorkTimeByMonth(arg1:number,arg2:time.Month,arg3:number):Promise<{[key: string]: number}>;

export function GetWorkTimeByProject(arg1:number,arg2:string):Promise<number>;

export function GetWorkTimeByWeek(arg1:number,arg2:time.Month,arg3:number,arg4:number):Promise<{[key: string]: number}>;

export function GetYearlyWorkTime(arg1:number,arg2:number):Promise<number>;

export function GetYearlyWorkTimeByProject(arg1:number,arg2:number):Promise<{[key: string]: number}>;

export function MinimizeWindow():Promise<void>;

export function NewOrganization(arg1:string,arg2:string):Promise<main.NewOrgRet>;

export function NewProject(arg1:string,arg2:string):Promise<main.Project>;

export function NormalizeWindow():Promise<void>;

export function RenameOrganization(arg1:number,arg2:string):Promise<main.Organization>;

export function RenameProject(arg1:number,arg2:string):Promise<main.Project>;

export function SetOrganization(arg1:number):Promise<void>;

export function SetProject(arg1:number):Promise<void>;

export function ShowWindow():Promise<void>;

export function StartTimer(arg1:main.Organization,arg2:main.Project):Promise<void>;

export function StopTimer():Promise<void>;

export function TimeElapsed():Promise<number>;

export function TimerRunning():Promise<boolean>;

export function ToggleFavoriteOrganization(arg1:number):Promise<void>;

export function ToggleFavoriteProject(arg1:number):Promise<void>;

export function UpdateAvailable():Promise<boolean>;
